{
  "compilerOptions": {
    "target": "es2016", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    // "lib": [],
    "module": "CommonJS",                                      /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "experimentalDecorators": true, /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true, /* Emit design-type metadata for decorated declarations in source files. */
    "moduleResolution": "node", /* Specify how TypeScript looks up a file from a given module specifier. */
    "resolveJsonModule": true, /* Enable importing .json files. */
    "sourceMap": false,
    "rootDir": "src",
    "baseUrl": "./", /* Create source map files for emitted JavaScript files. */
    "outDir": "dist", /* Specify an output folder for all emitted files. */
    "importHelpers": true, /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
    "allowSyntheticDefaultImports": true, /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
    "strict": true, /* Enable all strict type-checking options. */
    "noImplicitAny": false, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
    "noImplicitThis": true, /* Enable error reporting when 'this' is given the type 'any'. */
    "alwaysStrict": true, /* Ensure 'use strict' is always emitted. */
    "noUnusedLocals": true, /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": false, /* Raise an error when a function parameter isn't read. */
    "noImplicitReturns": true, /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true, /* Enable error reporting for fallthrough cases in switch statements. */
    "skipLibCheck": true,
    "strictPropertyInitialization": false,                                 /* Skip type checking all .d.ts files. */
    "paths": {
      "@/*": ["./src/*"],
      "@Config/*": ["./src/config/*"],
      "@Database/*": ["./src/database/*"],
      "@Routes/*": ["./src/routes/*"],
      "@Server/*": ["./src/server/*"],
      "@App/*": ["./src/app/*"],
      "@Enums/*": ["./src/app/enums/*"],
      "@Helpers/*": ["./src/app/helper/*"],
      "@Controllers/*": ["./src/app/http/controllers/*"],
      "@Constants/*": ["./src/app/http/constants/*"],
      "@Middleware/*": ["./src/app/http/middleware/*"],
      "@Requests/*": ["./src/app/http/requests/*"],
      "@Response/*": ["./src/app/http/responses/*"],
      "@Utils/*": ["./src/app/http/utility/*"],
      "@Interfaces/*": ["./src/app/interfaces/*"],
      "@Entities/*": ["./src/app/interfaces/entities/*"],
      "@Models/*": ["./src/app/models/*"],
      "@Repositories/*": ["./src/app/repositories/*"],
      "@Services/*": ["./src/app/services/*"],
      "@Provider/*": ["./src/app/providers/*"],
    }
  },
  "include": [
    "src/**/*"
  ], // which files to compile
  "exclude": [
    "node_modules",
    "dist"
  ], // which files to skip
}